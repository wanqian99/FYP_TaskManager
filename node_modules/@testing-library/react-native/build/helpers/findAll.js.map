{"version":3,"file":"findAll.js","names":["findAll","root","predicate","options","results","findAllInternal","includeHiddenElements","hidden","getConfig","defaultIncludeHiddenElements","cache","WeakMap","filter","element","isHiddenFromAccessibility","matchingDescendants","children","forEach","child","push","matchDeepestOnly","length"],"sources":["../../src/helpers/findAll.ts"],"sourcesContent":["import { ReactTestInstance } from 'react-test-renderer';\nimport { getConfig } from '../config';\nimport { isHiddenFromAccessibility } from './accessiblity';\n\ninterface FindAllOptions {\n  /** Match elements hidden from accessibility */\n  includeHiddenElements?: boolean;\n\n  /** RTL-compatible alias to `includeHiddenElements` */\n  hidden?: boolean;\n\n  /* Exclude any ancestors of deepest matched elements even if they match the predicate */\n  matchDeepestOnly?: boolean;\n}\n\nexport function findAll(\n  root: ReactTestInstance,\n  predicate: (element: ReactTestInstance) => boolean,\n  options?: FindAllOptions\n) {\n  const results = findAllInternal(root, predicate, options);\n\n  const includeHiddenElements =\n    options?.includeHiddenElements ??\n    options?.hidden ??\n    getConfig()?.defaultIncludeHiddenElements;\n\n  if (includeHiddenElements) {\n    return results;\n  }\n\n  const cache = new WeakMap<ReactTestInstance>();\n  return results.filter(\n    (element) => !isHiddenFromAccessibility(element, { cache })\n  );\n}\n\n// Extracted from React Test Renderer\n// src: https://github.com/facebook/react/blob/8e2bde6f2751aa6335f3cef488c05c3ea08e074a/packages/react-test-renderer/src/ReactTestRenderer.js#L402\nfunction findAllInternal(\n  root: ReactTestInstance,\n  predicate: (element: ReactTestInstance) => boolean,\n  options?: FindAllOptions\n): Array<ReactTestInstance> {\n  const results: ReactTestInstance[] = [];\n\n  // Match descendants first but do not add them to results yet.\n  const matchingDescendants: ReactTestInstance[] = [];\n  root.children.forEach((child) => {\n    if (typeof child === 'string') {\n      return;\n    }\n    matchingDescendants.push(...findAllInternal(child, predicate, options));\n  });\n\n  if (\n    // When matchDeepestOnly = true: add current element only if no descendants match\n    (!options?.matchDeepestOnly || matchingDescendants.length === 0) &&\n    predicate(root)\n  ) {\n    results.push(root);\n  }\n\n  // Add matching descendants after element to preserve original tree walk order.\n  results.push(...matchingDescendants);\n\n  return results;\n}\n"],"mappings":";;;;;;AACA;AACA;AAaO,SAASA,OAAO,CACrBC,IAAuB,EACvBC,SAAkD,EAClDC,OAAwB,EACxB;EACA,MAAMC,OAAO,GAAGC,eAAe,CAACJ,IAAI,EAAEC,SAAS,EAAEC,OAAO,CAAC;EAEzD,MAAMG,qBAAqB,GACzBH,OAAO,EAAEG,qBAAqB,IAC9BH,OAAO,EAAEI,MAAM,IACf,IAAAC,iBAAS,GAAE,EAAEC,4BAA4B;EAE3C,IAAIH,qBAAqB,EAAE;IACzB,OAAOF,OAAO;EAChB;EAEA,MAAMM,KAAK,GAAG,IAAIC,OAAO,EAAqB;EAC9C,OAAOP,OAAO,CAACQ,MAAM,CAClBC,OAAO,IAAK,CAAC,IAAAC,uCAAyB,EAACD,OAAO,EAAE;IAAEH;EAAM,CAAC,CAAC,CAC5D;AACH;;AAEA;AACA;AACA,SAASL,eAAe,CACtBJ,IAAuB,EACvBC,SAAkD,EAClDC,OAAwB,EACE;EAC1B,MAAMC,OAA4B,GAAG,EAAE;;EAEvC;EACA,MAAMW,mBAAwC,GAAG,EAAE;EACnDd,IAAI,CAACe,QAAQ,CAACC,OAAO,CAAEC,KAAK,IAAK;IAC/B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B;IACF;IACAH,mBAAmB,CAACI,IAAI,CAAC,GAAGd,eAAe,CAACa,KAAK,EAAEhB,SAAS,EAAEC,OAAO,CAAC,CAAC;EACzE,CAAC,CAAC;EAEF;EACE;EACA,CAAC,CAACA,OAAO,EAAEiB,gBAAgB,IAAIL,mBAAmB,CAACM,MAAM,KAAK,CAAC,KAC/DnB,SAAS,CAACD,IAAI,CAAC,EACf;IACAG,OAAO,CAACe,IAAI,CAAClB,IAAI,CAAC;EACpB;;EAEA;EACAG,OAAO,CAACe,IAAI,CAAC,GAAGJ,mBAAmB,CAAC;EAEpC,OAAOX,OAAO;AAChB"}