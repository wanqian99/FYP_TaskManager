{"version":3,"file":"makeQueries.js","names":["deprecatedKeys","extractDeprecatedWaitForOptions","options","undefined","waitForOptions","timeout","interval","stackTraceError","forEach","key","option","console","warn","toString","makeQueries","queryAllByQuery","getMissingError","getMultipleError","getAllByQuery","instance","getAllFn","predicate","results","length","ErrorWithStack","queryByQuery","singleQueryFn","getByQuery","getFn","findAllByQuery","findAllFn","queryOptions","deprecatedWaitForOptions","waitFor","findByQuery","findFn","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy"],"sources":["../../src/queries/makeQueries.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { ErrorWithStack } from '../helpers/errors';\nimport waitFor from '../waitFor';\nimport type { WaitForOptions } from '../waitFor';\n\nexport type GetByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance;\n\nexport type GetAllByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance[];\n\nexport type QueryByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance | null;\n\nexport type QueryAllByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance[];\n\nexport type FindByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  // Remove `& WaitForOptions` when all queries have been migrated to support 2nd arg query options.\n  options?: Options & WaitForOptions,\n  waitForOptions?: WaitForOptions\n) => Promise<ReactTestInstance>;\n\nexport type FindAllByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  // Remove `& WaitForOptions` when all queries have been migrated to support 2nd arg query options.\n  options?: Options & WaitForOptions,\n  waitForOptions?: WaitForOptions\n) => Promise<ReactTestInstance[]>;\n\ntype UnboundQuery<Query> = (instance: ReactTestInstance) => Query;\n\nexport type UnboundQueries<Predicate, Options> = {\n  getBy: UnboundQuery<GetByQuery<Predicate, Options>>;\n  getAllBy: UnboundQuery<GetAllByQuery<Predicate, Options>>;\n  queryBy: UnboundQuery<QueryByQuery<Predicate, Options>>;\n  queryAllBy: UnboundQuery<QueryAllByQuery<Predicate, Options>>;\n  findBy: UnboundQuery<FindByQuery<Predicate, Options>>;\n  findAllBy: UnboundQuery<FindAllByQuery<Predicate, Options>>;\n};\n\nconst deprecatedKeys: (keyof WaitForOptions)[] = [\n  'timeout',\n  'interval',\n  'stackTraceError',\n];\n\n// The WaitForOptions has been moved to the second option param of findBy* methods with the adding of TextMatchOptions\n// To make the migration easier and avoid a breaking change, keep reading this options from the first param but warn\nfunction extractDeprecatedWaitForOptions(options?: WaitForOptions) {\n  if (!options) {\n    return undefined;\n  }\n\n  const waitForOptions: WaitForOptions = {\n    timeout: options.timeout,\n    interval: options.interval,\n    stackTraceError: options.stackTraceError,\n  };\n\n  deprecatedKeys.forEach((key) => {\n    const option = options[key];\n    if (option) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Use of option \"${key}\" in a findBy* query options (2nd parameter) is deprecated. Please pass this option in the waitForOptions (3rd parameter). \nExample: \n\n  findByText(text, {}, { ${key}: ${option.toString()} })`\n      );\n    }\n  });\n\n  return waitForOptions;\n}\n\nexport function makeQueries<Predicate, Options>(\n  queryAllByQuery: UnboundQuery<QueryAllByQuery<Predicate, Options>>,\n  getMissingError: (predicate: Predicate, options?: Options) => string,\n  getMultipleError: (predicate: Predicate, options?: Options) => string\n): UnboundQueries<Predicate, Options> {\n  function getAllByQuery(instance: ReactTestInstance) {\n    return function getAllFn(predicate: Predicate, options?: Options) {\n      const results = queryAllByQuery(instance)(predicate, options);\n\n      if (results.length === 0) {\n        throw new ErrorWithStack(getMissingError(predicate, options), getAllFn);\n      }\n\n      return results;\n    };\n  }\n\n  function queryByQuery(instance: ReactTestInstance) {\n    return function singleQueryFn(predicate: Predicate, options?: Options) {\n      const results = queryAllByQuery(instance)(predicate, options);\n\n      if (results.length > 1) {\n        throw new ErrorWithStack(\n          getMultipleError(predicate, options),\n          singleQueryFn\n        );\n      }\n\n      if (results.length === 0) {\n        return null;\n      }\n\n      return results[0];\n    };\n  }\n\n  function getByQuery(instance: ReactTestInstance) {\n    return function getFn(predicate: Predicate, options?: Options) {\n      const results = queryAllByQuery(instance)(predicate, options);\n\n      if (results.length > 1) {\n        throw new ErrorWithStack(getMultipleError(predicate, options), getFn);\n      }\n\n      if (results.length === 0) {\n        throw new ErrorWithStack(getMissingError(predicate, options), getFn);\n      }\n\n      return results[0];\n    };\n  }\n\n  function findAllByQuery(instance: ReactTestInstance) {\n    return function findAllFn(\n      predicate: Predicate,\n      queryOptions?: Options & WaitForOptions,\n      waitForOptions: WaitForOptions = {}\n    ) {\n      const deprecatedWaitForOptions =\n        extractDeprecatedWaitForOptions(queryOptions);\n      return waitFor(() => getAllByQuery(instance)(predicate, queryOptions), {\n        ...deprecatedWaitForOptions,\n        ...waitForOptions,\n      });\n    };\n  }\n\n  function findByQuery(instance: ReactTestInstance) {\n    return function findFn(\n      predicate: Predicate,\n      queryOptions?: Options & WaitForOptions,\n      waitForOptions: WaitForOptions = {}\n    ) {\n      const deprecatedWaitForOptions =\n        extractDeprecatedWaitForOptions(queryOptions);\n      return waitFor(() => getByQuery(instance)(predicate, queryOptions), {\n        ...deprecatedWaitForOptions,\n        ...waitForOptions,\n      });\n    };\n  }\n\n  return {\n    getBy: getByQuery,\n    getAllBy: getAllByQuery,\n    queryBy: queryByQuery,\n    queryAllBy: queryAllByQuery,\n    findBy: findByQuery,\n    findAllBy: findAllByQuery,\n  };\n}\n"],"mappings":"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"}