{"version":3,"sources":["Button.tsx"],"names":["React","StyleSheet","View","RectButton","isBright","Button","children","onPress","color","style","containerStyle","styles","container","backgroundColor","buttonStyle","button","borderColor","create","borderRadius","elevation","height","width","borderWidth","hairlineWidth","justifyContent","alignItems"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,UAApB,EAAgCC,IAAhC,QAAuD,cAAvD;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,SAASC,QAAT,QAAyB,SAAzB;;AAQA,MAAMC,MAA6B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAAyC;AAC7E,QAAMC,cAAc,GAAG,CACrBC,MAAM,CAACC,SADc,EAErB;AACEC,IAAAA,eAAe,EAAEL,KAAK,IAAI;AAD5B,GAFqB,EAKrBC,KALqB,CAAvB;AAQA,QAAMK,WAAW,GAAG,CAClBH,MAAM,CAACI,MADW,EAElB;AACEF,IAAAA,eAAe,EAAEL,KAAK,GAClBJ,QAAQ,CAACI,KAAD,CAAR,GACE,WADF,GAEE,WAHgB,GAIlB,EALN;AAMEQ,IAAAA,WAAW,EAAER;AANf,GAFkB,EAUlBC,KAVkB,CAApB;AAaA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC;AAAb,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,KAAK,EAAEO,WAFT;AAGE,IAAA,aAAa,EAAE,GAHjB;AAIE,IAAA,WAAW,EAAEN,KAJf;AAKE,IAAA,aAAa,EAAEA;AALjB,KAOGF,QAPH,CADF,CADF;AAaD,CAnCD;;AAqCA,MAAMK,MAAM,GAAGV,UAAU,CAACgB,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,YAAY,EAAE,EADL;AAETC,IAAAA,SAAS,EAAE;AAFF,GADoB;AAK/BJ,EAAAA,MAAM,EAAE;AACNG,IAAAA,YAAY,EAAE,EADR;AAENE,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,KAAK,EAAE,EAHD;AAINC,IAAAA,WAAW,EAAErB,UAAU,CAACsB,aAJlB;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNC,IAAAA,UAAU,EAAE;AANN;AALuB,CAAlB,CAAf;AAeA,eAAepB,MAAf","sourcesContent":["import React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport { RectButton } from 'react-native-gesture-handler';\n\nimport { isBright } from './utils';\n\ninterface ButtonProps {\n  onPress: () => void;\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, onPress, color, style }) => {\n  const containerStyle = [\n    styles.container,\n    {\n      backgroundColor: color || '#232323',\n    },\n    style,\n  ];\n\n  const buttonStyle = [\n    styles.button,\n    {\n      backgroundColor: color\n        ? isBright(color)\n          ? '#000000b0'\n          : '#ffffffb0'\n        : '',\n      borderColor: color,\n    },\n    style,\n  ];\n\n  return (\n    <View style={containerStyle}>\n      <RectButton\n        onPress={onPress}\n        style={buttonStyle}\n        activeOpacity={0.5}\n        rippleColor={color}\n        underlayColor={color}\n      >\n        {children}\n      </RectButton>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 25,\n    elevation: 3,\n  },\n  button: {\n    borderRadius: 25,\n    height: 50,\n    width: 50,\n    borderWidth: StyleSheet.hairlineWidth,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default Button;\n"]}