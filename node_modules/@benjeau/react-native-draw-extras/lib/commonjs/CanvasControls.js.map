{"version":3,"sources":["CanvasControls.tsx"],"names":["CanvasControls","onClear","onUndo","onToggleEraser","onToggleBrushProperties","buttonStyle","tool","DEFAULT_TOOL","deleteButtonColor","DEFAULT_DELETE_BUTTON_COLOR","otherButtonsColor","DEFAULT_OTHER_BUTTONS_COLOR","color","thickness","opacity","brushPreview","DEFAULT_BRUSH_PREVIEW","styles","container","content","buttonsContainer","endButton","DrawingTool","Brush","StyleSheet","create","height","width","justifyContent","flexDirection","alignItems","marginHorizontal","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport {\n  DEFAULT_BRUSH_PREVIEW,\n  DEFAULT_DELETE_BUTTON_COLOR,\n  DEFAULT_OTHER_BUTTONS_COLOR,\n  DEFAULT_TOOL,\n} from './constants';\nimport { DrawingTool } from './types';\nimport BrushPreview, { BrushPreviewProps } from './BrushPreview';\nimport Button from './Button';\nimport { Brush, Delete, Eraser, Palette, Undo } from './icons';\n\nexport interface CanvasControlsProps extends BrushPreviewProps {\n  /**\n   * Callback when the clear button is pressed\n   */\n  onClear?: () => void;\n\n  /**\n   * Callback when the undo button is pressed\n   */\n  onUndo?: () => void;\n\n  /**\n   * Callback when the eraser button is pressed\n   */\n  onToggleEraser?: () => void;\n\n  /**\n   * Callback when the brush properties button is pressed\n   */\n  onToggleBrushProperties?: () => void;\n\n  /**\n   * Override the style of the buttons\n   */\n  buttonStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Initial tool of the canvas\n   * @default DEFAULT_TOOL\n   */\n  tool?: DrawingTool;\n\n  /**\n   * Delete button color\n   * @default DEFAULT_DELETE_BUTTON_COLOR\n   */\n  deleteButtonColor?: string;\n\n  /**\n   * Other buttons color (undo and eraser mode toggle)\n   * @default DEFAULT_OTHER_BUTTONS_COLOR\n   */\n  otherButtonsColor?: string;\n}\n\n/**\n * Bottom section of the canvas, allowing the user to change the brush\n * properties, clear the canvas, undo strokes.\n *\n * The buttons will be visible if the corresponding callback is provided.\n */\nconst CanvasControls: React.FC<CanvasControlsProps> = ({\n  onClear,\n  onUndo,\n  onToggleEraser,\n  onToggleBrushProperties,\n  buttonStyle,\n  tool = DEFAULT_TOOL,\n  deleteButtonColor = DEFAULT_DELETE_BUTTON_COLOR,\n  otherButtonsColor = DEFAULT_OTHER_BUTTONS_COLOR,\n  color,\n  thickness,\n  opacity,\n  brushPreview = DEFAULT_BRUSH_PREVIEW,\n}) => (\n  <View style={styles.container}>\n    <View style={styles.content}>\n      <View style={styles.buttonsContainer}>\n        {onClear && (\n          <Button\n            onPress={onClear}\n            color={deleteButtonColor}\n            style={buttonStyle}\n          >\n            <Delete fill={deleteButtonColor} height={30} width={30} />\n          </Button>\n        )}\n        {onUndo && (\n          <View style={onClear && styles.endButton}>\n            <Button\n              onPress={onUndo}\n              color={otherButtonsColor}\n              style={buttonStyle}\n            >\n              <Undo fill={otherButtonsColor} height={30} width={30} />\n            </Button>\n          </View>\n        )}\n      </View>\n\n      <BrushPreview\n        color={color}\n        opacity={opacity}\n        thickness={thickness}\n        brushPreview={brushPreview}\n      />\n\n      <View style={styles.buttonsContainer}>\n        {onToggleEraser && (\n          <Button\n            onPress={onToggleEraser}\n            color={otherButtonsColor}\n            style={buttonStyle}\n          >\n            {tool === DrawingTool.Brush ? (\n              <Brush fill={otherButtonsColor} height={30} width={30} />\n            ) : (\n              <Eraser fill={otherButtonsColor} height={30} width={30} />\n            )}\n          </Button>\n        )}\n        {onToggleBrushProperties && color && (\n          <View style={onToggleEraser && styles.endButton}>\n            <Button\n              onPress={onToggleBrushProperties}\n              color={color}\n              style={buttonStyle}\n            >\n              <Palette fill={color} height={30} width={30} />\n            </Button>\n          </View>\n        )}\n      </View>\n    </View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 80,\n    width: '100%',\n    justifyContent: 'center',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginHorizontal: 15,\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  endButton: {\n    marginLeft: 10,\n  },\n});\n\nexport default CanvasControls;\n"]}