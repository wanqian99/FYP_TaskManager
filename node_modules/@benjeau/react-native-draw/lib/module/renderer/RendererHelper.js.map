{"version":3,"sources":["RendererHelper.tsx"],"names":["React","useMemo","createSVGPath","RendererHelper","currentPath","currentColor","currentThickness","currentOpacity","paths","height","width","roundPoints","currentPathTolerance","Renderer","mergedPaths","color","path","thickness","opacity","data"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,aAAT,QAA8B,UAA9B;;AAqBA,MAAMC,cAA6C,GAAG,CAAC;AACrDC,EAAAA,WADqD;AAErDC,EAAAA,YAFqD;AAGrDC,EAAAA,gBAHqD;AAIrDC,EAAAA,cAJqD;AAKrDC,EAAAA,KALqD;AAMrDC,EAAAA,MANqD;AAOrDC,EAAAA,KAPqD;AAQrDC,EAAAA,WARqD;AASrDC,EAAAA,oBATqD;AAUrDC,EAAAA;AAVqD,CAAD,KAWhD;AACJ,QAAMC,WAAW,GAAGb,OAAO,CACzB,MAAM,CACJ,GAAGO,KADC,EAEJ;AACEO,IAAAA,KAAK,EAAEV,YADT;AAEEW,IAAAA,IAAI,EAAE,CAACd,aAAa,CAACE,WAAD,EAAcQ,oBAAd,EAAoCD,WAApC,CAAd,CAFR;AAGEM,IAAAA,SAAS,EAAEX,gBAHb;AAIEY,IAAAA,OAAO,EAAEX,cAJX;AAKEY,IAAAA,IAAI,EAAE,CAACf,WAAD;AALR,GAFI,CADmB,EAWzB,CACEC,YADF,EAEEC,gBAFF,EAGEF,WAHF,EAIEG,cAJF,EAKEC,KALF,EAMEI,oBANF,EAOED,WAPF,CAXyB,CAA3B;AAsBA,sBAAO,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,MAAlB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAwC,IAAA,KAAK,EAAEI;AAA/C,IAAP;AACD,CAnCD;;AAqCA,eAAeX,cAAf","sourcesContent":["import React, { useMemo } from 'react';\n\nimport type { PathDataType, PathType } from '../types';\nimport { createSVGPath } from '../utils';\n\nexport interface RendererProps {\n  paths: PathType[];\n  height: number;\n  width: number;\n}\n\ninterface RendererHelperProps {\n  currentPath: PathDataType;\n  currentColor: string;\n  currentThickness: number;\n  currentOpacity: number;\n  paths: PathType[];\n  height: number;\n  width: number;\n  roundPoints: boolean;\n  currentPathTolerance: number;\n  Renderer: React.FC<RendererProps>;\n}\n\nconst RendererHelper: React.FC<RendererHelperProps> = ({\n  currentPath,\n  currentColor,\n  currentThickness,\n  currentOpacity,\n  paths,\n  height,\n  width,\n  roundPoints,\n  currentPathTolerance,\n  Renderer,\n}) => {\n  const mergedPaths = useMemo(\n    () => [\n      ...paths,\n      {\n        color: currentColor,\n        path: [createSVGPath(currentPath, currentPathTolerance, roundPoints)],\n        thickness: currentThickness,\n        opacity: currentOpacity,\n        data: [currentPath],\n      },\n    ],\n    [\n      currentColor,\n      currentThickness,\n      currentPath,\n      currentOpacity,\n      paths,\n      currentPathTolerance,\n      roundPoints,\n    ]\n  );\n\n  return <Renderer height={height} width={width} paths={mergedPaths} />;\n};\n\nexport default RendererHelper;\n"]}