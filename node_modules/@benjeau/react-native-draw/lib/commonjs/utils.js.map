{"version":3,"sources":["utils.ts"],"names":["createSVGPath","points","tolerance","roundPoints","length","precision","error","console","log"],"mappings":";;;;;;;AAAA;;;;AAGO,MAAMA,aAAa,GAAG,CAC3BC,MAD2B,EAE3BC,SAF2B,EAG3BC,WAH2B,KAIxB;AACH,MAAIF,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACrB,QAAI;AACF,aAAO,8BAAgBH,MAAhB,EAAwB;AAC7BI,QAAAA,SAAS,EAAEF,WAAW,GAAG,CAAH,GAAO,CADA;AAE7BD,QAAAA;AAF6B,OAAxB,CAAP;AAID,KALD,CAKE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GATD,MASO,IAAIL,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AAC9B,WAAQ,IAAGH,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAa,IAAGA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAa,KAAIA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAa,IAAGA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAa,EAAzE;AACD;;AACD,SAAO,EAAP;AACD,CAlBM","sourcesContent":["import simplifySvgPath from '@luncheon/simplify-svg-path';\nimport type { PathDataType } from './types';\n\nexport const createSVGPath = (\n  points: PathDataType,\n  tolerance: number,\n  roundPoints: boolean\n) => {\n  if (points.length > 1) {\n    try {\n      return simplifySvgPath(points, {\n        precision: roundPoints ? 0 : 5,\n        tolerance,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  } else if (points.length === 1) {\n    return `M${points[0][0]},${points[0][1]} L${points[0][0]},${points[0][1]}`;\n  }\n  return '';\n};\n"]}