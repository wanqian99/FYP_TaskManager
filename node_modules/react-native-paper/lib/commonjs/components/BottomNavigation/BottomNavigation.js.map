{"version":3,"names":["MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Platform","OS","OUTLINE_WIDTH","Touchable","route","_0","style","children","borderless","centered","rippleColor","rest","TouchableRipple","supported","disabled","undefined","SceneComponent","React","memo","component","createElement","BottomNavigation","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","props","getLabelText","title","getBadge","badge","getColor","color","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","sceneAnimationEnabled","sceneAnimationType","sceneAnimationEasing","onTabPress","onIndexChange","shifting","isV3","routes","length","safeAreaInsets","labelMaxFontSizeMultiplier","compact","getLazy","lazy","bottom","left","right","useSafeAreaInsets","scale","animation","console","warn","focusedKey","index","key","visibleAnim","useAnimatedValue","tabsAnims","useAnimatedValueArray","map","_","i","tabsPositionAnims","offsetsAnims","indexAnim","rippleAnim","layout","onLayout","useLayout","loaded","setLoaded","useState","includes","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","easing","finished","tab","forEach","offset","useEffect","useIsKeyboardShown","onShow","onHide","prevNavigationState","useRef","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","StyleSheet","flatten","approxBackgroundColor","overlay","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","white","black","activeTintColor","onSecondaryContainer","inactiveTintColor","onSurfaceVariant","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","styles","container","content","background","focused","opacity","top","zIndex","absoluteFill","needsOffscreenAlphaCompositing","transform","translateX","translateY","bar","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","ripple","borderRadius","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","onSurface","inactiveLabelColor","badgeStyle","String","isV3Shifting","font","fonts","labelMedium","onPress","accessibilityRole","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","focusedIcon","unfocusedIcon","badgeContainer","labelContainer","labelWrapper","label","SceneMap","scenes","withInternalTheme","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"sources":["BottomNavigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\n\ntype Route = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\nexport type Props = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecated Deprecated in v5.x\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get lazy for the current screen. Uses true by default.\n   */\n  getLazy?: (props: { route: Route }) => boolean | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * The scene animation effect. Specify `'shifting'` for a different effect.\n   * By default, 'opacity' will be used.\n   */\n  sceneAnimationType?: 'opacity' | 'shifting';\n  /**\n   * The scene animation Easing.\n   */\n  sceneAnimationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\nconst OUTLINE_WIDTH = 64;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const NotificationsRoute = () => <Text>Notifications</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *     notifications: NotificationsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  sceneAnimationType = 'opacity',\n  sceneAnimationEasing,\n  onTabPress,\n  onIndexChange,\n  shifting = theme.isV3 ? false : navigationState.routes.length > 3,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact = !theme.isV3,\n  testID = 'bottom-navigation',\n  getLazy = ({ route }: { route: Route }) => route.lazy,\n}: Props) => {\n  const { bottom, left, right } = useSafeAreaInsets();\n  const { scale } = theme.animation;\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n\n    console.warn(\n      'BottomNavigation needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * Active state of individual tab item positions:\n   * -1 if they're before the active tab, 0 if they're active, 1 if they're after the active tab\n   */\n  const tabsPositionAnims = useAnimatedValueArray(\n    navigationState.routes.map((_, i) =>\n      i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: theme.isV3 || shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsPositionAnims[i], {\n            toValue: i === index ? 0 : i >= index ? 1 : -1,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n      ]).start(({ finished }) => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      indexAnim,\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      rippleAnim,\n      scale,\n      tabsAnims,\n      tabsPositionAnims,\n      sceneAnimationEasing,\n      theme,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  const prevNavigationState = React.useRef<NavigationState>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationState.routes.findIndex(\n        (route) => route.key === key\n      );\n\n      onIndexChange(index);\n    },\n    [navigationState.routes, onIndexChange]\n  );\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode, isV3 } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n    StyleSheet.flatten(barStyle) || {};\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors?.surface)\n    : colors?.primary;\n\n  const v2BackgroundColorInterpolation = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const backgroundColor = isV3\n    ? customBackground || theme.colors.elevation.level2\n    : shifting\n    ? v2BackgroundColorInterpolation\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n\n  const activeTintColor =\n    typeof activeColor !== 'undefined'\n      ? activeColor\n      : isV3\n      ? theme.colors.onSecondaryContainer\n      : textColor;\n\n  const inactiveTintColor =\n    typeof inactiveColor !== 'undefined'\n      ? inactiveColor\n      : isV3\n      ? theme.colors.onSurfaceVariant\n      : color(textColor).alpha(0.5).rgb().string();\n\n  const touchColor = color(activeColor || activeTintColor)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? left,\n    right: safeAreaInsets?.right ?? right,\n    bottom: safeAreaInsets?.bottom ?? bottom,\n  };\n\n  return (\n    <View style={[styles.container, style]} testID={testID}>\n      <View style={[styles.content, { backgroundColor: colors?.background }]}>\n        {routes.map((route, index) => {\n          if (getLazy({ route }) !== false && !loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsPositionAnims[index].interpolate({\n                inputRange: [-1, 0, 1],\n                outputRange: [0, 1, 0],\n              })\n            : focused\n            ? 1\n            : 0;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, FAR_FAR_AWAY],\n              })\n            : focused\n            ? 0\n            : FAR_FAR_AWAY;\n\n          const left =\n            sceneAnimationType === 'shifting'\n              ? tabsPositionAnims[index].interpolate({\n                  inputRange: [-1, 0, 1],\n                  outputRange: [-50, 0, 50],\n                })\n              : 0;\n\n          const zIndex = focused ? 1 : 0;\n\n          return (\n            <BottomNavigationRouteScreen\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              index={index}\n              visibility={opacity}\n              style={[StyleSheet.absoluteFill, { zIndex }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View\n                {...(Platform.OS === 'android' && {\n                  needsOffscreenAlphaCompositing: sceneAnimationEnabled,\n                })}\n                renderToHardwareTextureAndroid={sceneAnimationEnabled}\n                style={[\n                  styles.content,\n                  {\n                    opacity: opacity,\n                    transform: [{ translateX: left }, { translateY: top }],\n                  },\n                ]}\n              >\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </BottomNavigationRouteScreen>\n          );\n        })}\n      </View>\n      <Surface\n        {...(theme.isV3 && { elevation: 0 })}\n        style={\n          [\n            !theme.isV3 && { elevation: 4 },\n            styles.bar,\n            keyboardHidesNavigationBar\n              ? {\n                  // When the keyboard is shown, slide down the navigation bar\n                  transform: [\n                    {\n                      translateY: visibleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the navigation bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the navigation bar is hidden\n                  position: keyboardVisible ? 'absolute' : null,\n                }\n              : null,\n            barStyle,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={\n          layout.measured\n            ? keyboardHidesNavigationBar && keyboardVisible\n              ? 'none'\n              : 'auto'\n            : 'none'\n        }\n        onLayout={onLayout}\n      >\n        <Animated.View\n          style={[styles.barContent, { backgroundColor }]}\n          testID={`${testID}-bar-content`}\n        >\n          <View\n            style={[\n              styles.items,\n              {\n                marginBottom: insets.bottom,\n                marginHorizontal: Math.max(insets.left, insets.right),\n              },\n              compact && {\n                maxWidth: maxTabBarWidth,\n              },\n            ]}\n            accessibilityRole={'tablist'}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                    top: (BAR_HEIGHT - rippleSize) / 2,\n                    left:\n                      tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n                    height: rippleSize,\n                    width: rippleSize,\n                    borderRadius: rippleSize / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      {\n                        // Scale to twice the size  to ensure it covers the whole navigation bar\n                        scale: rippleAnim.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: rippleAnim.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            {routes.map((route, index) => {\n              const focused = navigationState.index === index;\n              const active = tabsAnims[index];\n\n              // Scale the label up\n              const scale =\n                labeled && shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.5, 1],\n                    })\n                  : 1;\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = labeled\n                ? shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [7, 0],\n                    })\n                  : 0\n                : 7;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const activeOpacity = active;\n              const inactiveOpacity = active.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n\n              const v3ActiveOpacity = focused ? 1 : 0;\n              const v3InactiveOpacity = shifting\n                ? inactiveOpacity\n                : focused\n                ? 0\n                : 1;\n\n              // Scale horizontally the outline pill\n              const outlineScale = focused\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1],\n                  })\n                : 0;\n\n              const badge = getBadge({ route });\n\n              const activeLabelColor = !isV3\n                ? activeTintColor\n                : focused\n                ? theme.colors.onSurface\n                : theme.colors.onSurfaceVariant;\n\n              const inactiveLabelColor = !isV3\n                ? inactiveTintColor\n                : focused\n                ? theme.colors.onSurface\n                : theme.colors.onSurfaceVariant;\n\n              const badgeStyle = {\n                top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n                right:\n                  (badge != null && typeof badge !== 'boolean'\n                    ? String(badge).length * -2\n                    : 0) - (!isV3 ? 2 : 0),\n              };\n\n              const isV3Shifting = isV3 && shifting && labeled;\n\n              const font = isV3 ? theme.fonts.labelMedium : {};\n\n              return renderTouchable({\n                key: route.key,\n                route,\n                borderless: true,\n                centered: true,\n                rippleColor: isV3 ? 'transparent' : touchColor,\n                onPress: () => handleTabPress(index),\n                testID: getTestID({ route }),\n                accessibilityLabel: getAccessibilityLabel({ route }),\n                accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n                accessibilityState: { selected: focused },\n                style: [styles.item, isV3 && styles.v3Item],\n                children: (\n                  <View\n                    pointerEvents=\"none\"\n                    style={\n                      isV3 &&\n                      (labeled\n                        ? styles.v3TouchableContainer\n                        : styles.v3NoLabelContainer)\n                    }\n                  >\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        isV3 && styles.v3IconContainer,\n                        (!isV3 || isV3Shifting) && {\n                          transform: [{ translateY }],\n                        },\n                      ]}\n                    >\n                      {isV3 && focused && (\n                        <Animated.View\n                          style={[\n                            styles.outline,\n                            {\n                              transform: [\n                                {\n                                  scaleX: outlineScale,\n                                },\n                              ],\n                              backgroundColor: theme.colors.secondaryContainer,\n                            },\n                          ]}\n                        />\n                      )}\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          isV3 && styles.v3IconWrapper,\n                          { opacity: isV3 ? v3ActiveOpacity : activeOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            color: activeTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.focusedIcon as IconSource}\n                            color={activeTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          isV3 && styles.v3IconWrapper,\n                          {\n                            opacity: isV3 ? v3InactiveOpacity : inactiveOpacity,\n                          },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: false,\n                            color: inactiveTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={\n                              theme.isV3 && route.unfocusedIcon !== undefined\n                                ? route.unfocusedIcon\n                                : (route.focusedIcon as IconSource)\n                            }\n                            color={inactiveTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <View style={[styles.badgeContainer, badgeStyle]}>\n                        {typeof badge === 'boolean' ? (\n                          <Badge visible={badge} size={isV3 ? 6 : 8} />\n                        ) : (\n                          <Badge visible={badge != null} size={16}>\n                            {badge}\n                          </Badge>\n                        )}\n                      </View>\n                    </Animated.View>\n                    {labeled ? (\n                      <Animated.View\n                        style={[\n                          styles.labelContainer,\n                          !isV3 && { transform: [{ scale }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            (!isV3 || isV3Shifting) && {\n                              opacity: activeOpacity,\n                            },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: true,\n                              color: activeLabelColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              variant=\"labelMedium\"\n                              style={[\n                                styles.label,\n                                {\n                                  color: activeLabelColor,\n                                  ...font,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                        {shifting ? null : (\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: inactiveOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: false,\n                                color: inactiveLabelColor,\n                              })\n                            ) : (\n                              <Text\n                                maxFontSizeMultiplier={\n                                  labelMaxFontSizeMultiplier\n                                }\n                                variant=\"labelMedium\"\n                                selectable={false}\n                                style={[\n                                  styles.label,\n                                  {\n                                    color: inactiveLabelColor,\n                                    ...font,\n                                  },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                        )}\n                      </Animated.View>\n                    ) : (\n                      !isV3 && <View style={styles.labelContainer} />\n                    )}\n                  </View>\n                ),\n              });\n            })}\n          </View>\n        </Animated.View>\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = (scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\nexport default withInternalTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  v3Item: {\n    paddingVertical: 0,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  v3IconWrapper: {\n    top: 4,\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16,\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center',\n  },\n});\n"],"mappings":"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"}